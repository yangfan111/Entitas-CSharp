// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SimpleProtoBuf.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Free.framework {

  /// <summary>Holder for reflection information generated from SimpleProtoBuf.proto</summary>
  public static partial class SimpleProtoBufReflection {

    #region Descriptor
    /// <summary>File descriptor for SimpleProtoBuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SimpleProtoBufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRTaW1wbGVQcm90b0J1Zi5wcm90byKJAQoLU2ltcGxlUHJvdG8SCwoDa2V5",
            "GAEgASgFEgoKAmtzGAIgAygFEgsKA2lucxgDIAMoBRIKCgJscxgEIAMoAxIK",
            "CgJzcxgFIAMoCRIKCgJicxgGIAMoCBIKCgJmcxgHIAMoAhIKCgJkcxgIIAMo",
            "ARIYCgJwcxgJIAMoCzIMLlNpbXBsZVByb3RvQhGqAg5GcmVlLmZyYW1ld29y",
            "a2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Free.framework.SimpleProto), global::Free.framework.SimpleProto.Parser, new[]{ "Key", "Ks", "Ins", "Ls", "Ss", "Bs", "Fs", "Ds", "Ps" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SimpleProto : pb::IMessage<SimpleProto> {
    private static readonly pb::MessageParser<SimpleProto> _parser = new pb::MessageParser<SimpleProto>(() => new SimpleProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimpleProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Free.framework.SimpleProtoBufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleProto(SimpleProto other) : this() {
      key_ = other.key_;
      ks_ = other.ks_.Clone();
      ins_ = other.ins_.Clone();
      ls_ = other.ls_.Clone();
      ss_ = other.ss_.Clone();
      bs_ = other.bs_.Clone();
      fs_ = other.fs_.Clone();
      ds_ = other.ds_.Clone();
      ps_ = other.ps_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimpleProto Clone() {
      return new SimpleProto(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "ks" field.</summary>
    public const int KsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_ks_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> ks_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ks {
      get { return ks_; }
    }

    /// <summary>Field number for the "ins" field.</summary>
    public const int InsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_ins_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> ins_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ins {
      get { return ins_; }
    }

    /// <summary>Field number for the "ls" field.</summary>
    public const int LsFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_ls_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> ls_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Ls {
      get { return ls_; }
    }

    /// <summary>Field number for the "ss" field.</summary>
    public const int SsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_ss_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> ss_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ss {
      get { return ss_; }
    }

    /// <summary>Field number for the "bs" field.</summary>
    public const int BsFieldNumber = 6;
    private static readonly pb::FieldCodec<bool> _repeated_bs_codec
        = pb::FieldCodec.ForBool(50);
    private readonly pbc::RepeatedField<bool> bs_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Bs {
      get { return bs_; }
    }

    /// <summary>Field number for the "fs" field.</summary>
    public const int FsFieldNumber = 7;
    private static readonly pb::FieldCodec<float> _repeated_fs_codec
        = pb::FieldCodec.ForFloat(58);
    private readonly pbc::RepeatedField<float> fs_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Fs {
      get { return fs_; }
    }

    /// <summary>Field number for the "ds" field.</summary>
    public const int DsFieldNumber = 8;
    private static readonly pb::FieldCodec<double> _repeated_ds_codec
        = pb::FieldCodec.ForDouble(66);
    private readonly pbc::RepeatedField<double> ds_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Ds {
      get { return ds_; }
    }

    /// <summary>Field number for the "ps" field.</summary>
    public const int PsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Free.framework.SimpleProto> _repeated_ps_codec
        = pb::FieldCodec.ForMessage(74, global::Free.framework.SimpleProto.Parser);
    private readonly pbc::RepeatedField<global::Free.framework.SimpleProto> ps_ = new pbc::RepeatedField<global::Free.framework.SimpleProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Free.framework.SimpleProto> Ps {
      get { return ps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimpleProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimpleProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if(!ks_.Equals(other.ks_)) return false;
      if(!ins_.Equals(other.ins_)) return false;
      if(!ls_.Equals(other.ls_)) return false;
      if(!ss_.Equals(other.ss_)) return false;
      if(!bs_.Equals(other.bs_)) return false;
      if(!fs_.Equals(other.fs_)) return false;
      if(!ds_.Equals(other.ds_)) return false;
      if(!ps_.Equals(other.ps_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0) hash ^= Key.GetHashCode();
      hash ^= ks_.GetHashCode();
      hash ^= ins_.GetHashCode();
      hash ^= ls_.GetHashCode();
      hash ^= ss_.GetHashCode();
      hash ^= bs_.GetHashCode();
      hash ^= fs_.GetHashCode();
      hash ^= ds_.GetHashCode();
      hash ^= ps_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      ks_.WriteTo(output, _repeated_ks_codec);
      ins_.WriteTo(output, _repeated_ins_codec);
      ls_.WriteTo(output, _repeated_ls_codec);
      ss_.WriteTo(output, _repeated_ss_codec);
      bs_.WriteTo(output, _repeated_bs_codec);
      fs_.WriteTo(output, _repeated_fs_codec);
      ds_.WriteTo(output, _repeated_ds_codec);
      ps_.WriteTo(output, _repeated_ps_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      size += ks_.CalculateSize(_repeated_ks_codec);
      size += ins_.CalculateSize(_repeated_ins_codec);
      size += ls_.CalculateSize(_repeated_ls_codec);
      size += ss_.CalculateSize(_repeated_ss_codec);
      size += bs_.CalculateSize(_repeated_bs_codec);
      size += fs_.CalculateSize(_repeated_fs_codec);
      size += ds_.CalculateSize(_repeated_ds_codec);
      size += ps_.CalculateSize(_repeated_ps_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimpleProto other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      ks_.Add(other.ks_);
      ins_.Add(other.ins_);
      ls_.Add(other.ls_);
      ss_.Add(other.ss_);
      bs_.Add(other.bs_);
      fs_.Add(other.fs_);
      ds_.Add(other.ds_);
      ps_.Add(other.ps_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            ks_.AddEntriesFrom(input, _repeated_ks_codec);
            break;
          }
          case 26:
          case 24: {
            ins_.AddEntriesFrom(input, _repeated_ins_codec);
            break;
          }
          case 34:
          case 32: {
            ls_.AddEntriesFrom(input, _repeated_ls_codec);
            break;
          }
          case 42: {
            ss_.AddEntriesFrom(input, _repeated_ss_codec);
            break;
          }
          case 50:
          case 48: {
            bs_.AddEntriesFrom(input, _repeated_bs_codec);
            break;
          }
          case 58:
          case 61: {
            fs_.AddEntriesFrom(input, _repeated_fs_codec);
            break;
          }
          case 66:
          case 65: {
            ds_.AddEntriesFrom(input, _repeated_ds_codec);
            break;
          }
          case 74: {
            ps_.AddEntriesFrom(input, _repeated_ps_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
